// <auto-generated />
using System;
using Assignment3_ShongChan.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignment3_ShongChan.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assignment3_ShongChan.Models.DomainModels.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("BorrowedById")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BorrowedById");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "F. Scott Fitzgerald",
                            AvailableQuantity = 0,
                            GenreId = 1,
                            IsAvailable = false,
                            Quantity = 5,
                            Title = "The Great Gatsby",
                            Year = 1925
                        },
                        new
                        {
                            Id = 2,
                            Author = "George Orwell",
                            AvailableQuantity = 2,
                            GenreId = 3,
                            IsAvailable = true,
                            Quantity = 8,
                            Title = "1984",
                            Year = 1949
                        },
                        new
                        {
                            Id = 3,
                            Author = "Yuval Noah Harari",
                            AvailableQuantity = 2,
                            GenreId = 2,
                            IsAvailable = true,
                            Quantity = 5,
                            Title = "Sapiens: A Brief History of Humankind",
                            Year = 2011
                        },
                        new
                        {
                            Id = 4,
                            Author = "Stieg Larsson",
                            AvailableQuantity = 1,
                            GenreId = 3,
                            IsAvailable = true,
                            Quantity = 3,
                            Title = "The Girl with the Dragon Tattoo",
                            Year = 2005
                        },
                        new
                        {
                            Id = 5,
                            Author = "Aldous Huxley",
                            AvailableQuantity = 4,
                            GenreId = 5,
                            IsAvailable = true,
                            Quantity = 7,
                            Title = "Brave New World",
                            Year = 1932
                        });
                });

            modelBuilder.Entity("Assignment3_ShongChan.Models.DomainModels.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fiction"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Non-Fiction"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Science"
                        });
                });

            modelBuilder.Entity("Assignment3_ShongChan.Models.DomainModels.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContentType = "image/jpeg",
                            ImagePath = "/Images/default-profile.png",
                            Name = "default"
                        });
                });

            modelBuilder.Entity("Assignment3_ShongChan.Models.DomainModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IssuedBookId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfileImageId")
                        .HasColumnType("int");

                    b.Property<string>("ProfilePic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("ProfileImageId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = "30",
                            DateOfBirth = new DateTime(1993, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin",
                            Password = "Admin123!",
                            ProfileImageId = 1,
                            ProfilePic = "/Images/default-profile.png",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Age = "25",
                            BookId = 1,
                            DateOfBirth = new DateTime(1998, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Member",
                            Password = "Member123!",
                            ProfileImageId = 1,
                            ProfilePic = "/Images/default-profile.png",
                            Role = "Member",
                            Username = "member"
                        },
                        new
                        {
                            Id = 3,
                            Age = "28",
                            BookId = 2,
                            DateOfBirth = new DateTime(1995, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bob Smith",
                            Password = "Bob@123",
                            ProfileImageId = 1,
                            ProfilePic = "/Images/default-profile.png",
                            Role = "Member",
                            Username = "Bob_smith"
                        },
                        new
                        {
                            Id = 4,
                            Age = "35",
                            BookId = 3,
                            DateOfBirth = new DateTime(1988, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Charlie Brown",
                            Password = "Charlie@123",
                            ProfileImageId = 1,
                            ProfilePic = "/Images/default-profile.png",
                            Role = "Member",
                            Username = "Charlie_brown"
                        },
                        new
                        {
                            Id = 5,
                            Age = "27",
                            DateOfBirth = new DateTime(1996, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "David Williams",
                            Password = "David@123",
                            ProfileImageId = 1,
                            ProfilePic = "/Images/default-profile.png",
                            Role = "Member",
                            Username = "David_williams"
                        },
                        new
                        {
                            Id = 6,
                            Age = "24",
                            DateOfBirth = new DateTime(1999, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Eva Davis",
                            Password = "Eva@123",
                            ProfileImageId = 1,
                            ProfilePic = "/Images/default-profile.png",
                            Role = "Member",
                            Username = "Eva_davis"
                        });
                });

            modelBuilder.Entity("Assignment3_ShongChan.Models.DomainModels.Book", b =>
                {
                    b.HasOne("Assignment3_ShongChan.Models.DomainModels.User", "BorrowedBy")
                        .WithMany("IssuedBooks")
                        .HasForeignKey("BorrowedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Assignment3_ShongChan.Models.DomainModels.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BorrowedBy");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Assignment3_ShongChan.Models.DomainModels.User", b =>
                {
                    b.HasOne("Assignment3_ShongChan.Models.DomainModels.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Assignment3_ShongChan.Models.DomainModels.Image", "ProfileImage")
                        .WithMany()
                        .HasForeignKey("ProfileImageId");

                    b.Navigation("Book");

                    b.Navigation("ProfileImage");
                });

            modelBuilder.Entity("Assignment3_ShongChan.Models.DomainModels.User", b =>
                {
                    b.Navigation("IssuedBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
